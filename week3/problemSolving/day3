/*
In England the currency is made up of pound, £, and pence, p.
There are eight coins in general circulation:

   1p, 2p, 5p, 10p, 20p, 50p, £1 (100p) and £2 (200p).

It is possible to make £2 in the following way:

   1×£1 + 1×50p + 2×20p + 1×5p + 1×2p + 3×1p

Given that total amount of pences, calculate the number of ways to create that amount.
Example:
coinCombination(200p) //-> 73682
*/

let total = 200;
let count = 0;

for (let a = 0; a <= total / 200; a++) { // £2
  for (let b = 0; b <= (total - a * 200) / 100; b++) { // £1
    for (let c = 0; c <= (total - a * 200 - b * 100) / 50; c++) { // 50p
      for (let d = 0; d <= (total - a * 200 - b * 100 - c * 50) / 20; d++) { // 20p
        for (let e = 0; e <= (total - a * 200 - b * 100 - c * 50 - d * 20) / 10; e++) { // 10p
          for (let f = 0; f <= (total - a * 200 - b * 100 - c * 50 - d * 20 - e * 10) / 5; f++) { // 5p
            for (let g = 0; g <= (total - a * 200 - b * 100 - c * 50 - d * 20 - e * 10 - f * 5) / 2; g++) { // 2p
              let h = (total - a * 200 - b * 100 - c * 50 - d * 20 - e * 10 - f * 5 - g * 2); // الباقي 1p
              if (h >= 0) {
                count++;
              }
            }
          }
        }
      }
    }
  }
}

console.log(count); // 73682

//Using functions  >> Recursion 

function coinCombinations(total, coins, index = 0) {
  // if we are at the last coin, there is only one way to make the total with it
  if (index === coins.length - 1) {
    return 1;
  }

  let Numberofways = 0;
  let coin = coins[index];

  for (let i = 0; i <= total; i += coin) {
      Numberofways += coinCombinations(total - i, coins, index + 1);
  }

  return Numberofways;
}


let coins = [200, 100, 50, 20, 10, 5, 2, 1];
console.log( coinCombinations(200, coins));
